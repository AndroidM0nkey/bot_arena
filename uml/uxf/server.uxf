<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced
fontfamily=Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>232</y>
      <w>368</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Server
--
-client_rich_infos: List[RichClientInfo]
-game_pubsub: PublishSubscribeService[Tuple[Game, GameRoom]]
-clients: Set[ClientName]
-room_manager: RoomManager
--
+listen(address, port)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>144</y>
      <w>200</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>async function run_game_loop
--
sess: ServerSession
client_info: RichClientInfo
game: Game
game_room: GameRoom</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>624</y>
      <w>256</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Game
--
+field: Field
+info: GameInfo
--
+take_turn(player_name: str, action: Action)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>160</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>/(Client)/
lt=.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>568</x>
      <y>736</y>
      <w>320</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Field
--
+width: int
+height: int
-snakes: Dict[str, Snake]
-objects: Dict[Point, Object]
-occupied_cells: Set[Point]
--
+move_snake(name: str, direction: Direction)
+random_free_cell(): Point
+is_cell_passable(point: Point): bool
+is_cell_completely_free(point: Point): bool
+place_object_randomly(object: Object)
+get_state(): GameState
+add_snake(snake_name: str, snake: Snake)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>512</x>
      <y>968</y>
      <w>224</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>_Snake
--
+head: Point
-tail: List[Direction]
--
~get_state(): SnakeState
~move(Direction)
~grow(Direction)
~get_occupied_cells(): Iterable[Point]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>752</x>
      <y>968</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Object 
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>680</y>
      <w>32</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>608</x>
      <y>896</y>
      <w>48</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=2..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>896</y>
      <w>48</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>312</y>
      <w>472</w>
      <h>328</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>540.0;10.0;570.0;10.0;570.0;330.0;10.0;330.0;10.0;390.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>152</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
TCP connection</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>208</y>
      <w>136</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
Starts</panel_attributes>
    <additional_attributes>150.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>272</x>
      <y>584</y>
      <w>904</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>Game subpackage</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>256</x>
      <y>88</y>
      <w>936</w>
      <h>1016</h>
    </coordinates>
    <panel_attributes>Server machine</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>280</x>
      <y>608</y>
      <w>120</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>This subpackage
is self-contained
and does not depend
on the network
functionalty</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>344</x>
      <y>768</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>FieldState
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>768</y>
      <w>112</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Produces</panel_attributes>
    <additional_attributes>10.0;20.0;120.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>264</x>
      <y>208</y>
      <w>160</w>
      <h>376</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Sent by</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;140.0;10.0;140.0;10.0;450.0;180.0;450.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>344</x>
      <y>888</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>SnakeState
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>784</y>
      <w>32</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>904</y>
      <w>128</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Produces</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0;140.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>616</y>
      <w>200</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>ChangeInFreeCells
--
-new_free: Set[Point]
-new_occupied: Set[Point]
--
+add_new_free(point: Point)
+add_new_occupied(point: Point)
+new_free(): Set[Point]
+new_occupied(): Set[Point]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>784</y>
      <w>120</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>enum MoveResult
--
Ok
Crashed</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>64</x>
      <y>232</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>*Note:*
Orange means
imported from
bot_arena_proto</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>792</y>
      <w>96</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Used by
lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;100.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>656</y>
      <w>96</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>Used by
lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;160.0;50.0;160.0;50.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>824</x>
      <y>144</y>
      <w>328</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>GameRoom
--
-players: Dict[ClientName, curio.Queue]
-client_names: List[ClientName]
-took_turn: Dict[ClientName, bool]
-sessions: Dict[ClientName, ServerSession]
-dead: Set[ClientName]
-game: Game
-game_end_pubsub: PublishSubscribeService[None]
--
+set_session(client: ClientName, sess: ServerSession)
+mark_snake_dead(client_name: ClientName)
+async report_death(client_name: ClientName)
+async finish_turn(client_name: ClientName)
+async wait_for_turn(client_name: ClientName)
*+async run_loop()*
+async terminate_all_sessions()
+async wait_until_game_ends()
/(Insignificant details omitted)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>488</x>
      <y>144</y>
      <w>120</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ClientName
--
-name: str
--
+str(): str
+repr(): str
+is_player(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>696</x>
      <y>144</y>
      <w>112</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>RichClientInfo
--
+name: ClientName
+info: ClientInfo</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>176</y>
      <w>112</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>368</x>
      <y>112</y>
      <w>608</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
Communication</panel_attributes>
    <additional_attributes>740.0;40.0;740.0;20.0;10.0;20.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>656</x>
      <y>376</y>
      <w>512</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>RoomManager
--
-room_mapping: RoomMapping
--
+create_room(invoking_client: ClientName)
+handle_room_quit(invoking_client: ClientName)
+remove_room(room_name: str)
+room_name_to_id(room_name: str): str
+handle_room_entry(invoking_client: ClientName, room_name: str, password: Optional[str])
+get_room_properties(invoking_client: ClientName): Dict[str, Any]
+set_room_properties(invoking_client: ClientName, props: Dict[str, Any])
+list_players_in_a_room(room_name: str): List[str]
+async wait_until_game_starts(invoking_client: ClientName): Tuple[Game, GameRoom]
+list_room_infos(invoking_client: ClientName): Iterable[RoomInfo]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>312</y>
      <w>32</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>352</y>
      <w>352</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>RoomMapping
--
-clients_to_rooms_map: Dict[ClientName, str]
-rooms_to_clients_map: Dict[str, Set[ClientName]]
--
+room_exists(room_name: str): bool
+add_room(room_name: str)
+remove_room(room_name: str)
+add_client_to_rool(room_name: str, client: ClientName)
+remove_client_from_room(client: ClientName)
+list_rooms(): Iterable[str]
+list_clients_in_a_room(room_name: str): Iterable[ClientName]
+count_players_in_a_room(room_name: str): int
+get_room_with_client(client: ClientName): str
+check_that_client_is_in_hub(client: ClientName)
+check_that_room_exists(room_name: str)
+check_that_room_does_not_exist(room_name: str)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>560</y>
      <w>24</w>
      <h>224</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>608</x>
      <y>328</y>
      <w>136</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>140.0;60.0;140.0;10.0;10.0;10.0;10.0;30.0</additional_attributes>
  </element>
</diagram>
